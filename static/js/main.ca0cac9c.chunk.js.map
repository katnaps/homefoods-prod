{"version":3,"sources":["containers/Signup.js","containers/Login.js","contexts/SessionContext.js","containers/Modal.js","components/NavBar.js","components/RandRecipeCard.js","pages/HomePage.js","pages/UserProfile.js","pages/Recipe.js","components/RecipeCard.js","pages/RecipePage.js","components/RelationCard.js","pages/FoodAnalyze.js","App.js","reportWebVitals.js","index.js"],"names":["setOpen","setLogin","openLogin","useState","username","setUsername","email","setEmail","password","setPassword","passwordConf","setPasswordConf","Form","onSubmit","e","preventDefault","axios","post","then","response","data","status","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","localStorage","setItem","token","success","className","Group","Label","Control","type","placeholder","onChange","target","value","Button","variant","disabled","onClick","openSignUp","info","catch","err","console","log","style","fontSize","paddingBottom","createContext","children","isOpen","isLoginForm","setIsLoginForm","setStatus","getItem","isLoggedIn","close","SessionContext","Provider","Modal","show","onHide","Header","closeButton","Title","Login","Footer","useContext","Navbar","bg","expand","fixed","Brand","to","color","textDecoration","Toggle","aria-controls","Collapse","id","Nav","Link","removeItem","random","Row","map","randomRecipe","Col","lg","xs","CardDeck","Card","text","width","Img","src","image","Body","title","length","substring","Text","diets","pathname","recipe","showRand","setShowRand","setRandom","useEffect","get","process","recipes","RandRecipeCard","useParams","user","setUser","profileImg","setProfileImg","old_password","setOldPassword","headers","Authorization","profileImage","image_path","Container","Image","fluid","fileInput","formData","FormData","append","uploadImg","userCopy","File","files","label","API_KEY","isSteps","setSteps","imageURL","setImageURL","setTitle","sourceURL","setSourceURL","author","setAuthor","cookTime","setCookTime","resp","sourceUrl","sourceName","cookingMinutes","steps","Jumbotron","href","CardGroup","border","number","ingredients","name","step","showUnder","isRecipes","likes","searchResult","setSearchResult","setRecipes","count","setCount","showCount","setShowCount","warn","InputGroup","FormControl","aria-label","aria-describedby","Append","RecipeCard","foodRelation","imageType","url","foodImg","setFoodImg","previewFood","setPreviewFood","setFoodRelation","showText","setShowText","foodInput","formFood","URL","createObjectURL","RelationCard","App","NavBar","exact","path","component","HomePage","UserProfile","RecipePage","Recipe","FoodAnalyze","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca0cac9c.chunk.js","sourcesContent":["\nimport React, {useState} from 'react'\nimport axios from 'axios'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { toast } from 'react-toastify';\n\n\nexport default ({setOpen, setLogin, openLogin}) => {\n\tconst [username, setUsername] = useState(\"\")\n\tconst [email, setEmail] = useState(\"\")\n\tconst [password, setPassword] = useState(\"\")\n\tconst [passwordConf, setPasswordConf] = useState(\"\")\n\n\tconst handleSignUp = (e) => {\n\t\te.preventDefault()\n\n\t\taxios.post(\"https://homefoods1.herokuapp.com/api/v1/users/\", {\n\t\t\tusername,\n\t\t\temail,\n\t\t\tpassword\n\t\t})\n\t\t.then(response => {\n\t\t\tif(response.data.status == \"failed\") {\n\t\t\t\ttoast.error('🥭 Details not unique', {\n\t\t\t\t\tposition: \"top-center\",\n\t\t\t\t\tautoClose: 5000,\n\t\t\t\t\thideProgressBar: false,\n\t\t\t\t\tcloseOnClick: true,\n\t\t\t\t\tpauseOnHover: true,\n\t\t\t\t\tdraggable: true,\n\t\t\t\t\tprogress: undefined,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// console.log(response)\n\t\t\t\tlocalStorage.setItem(\"token\", response.data.token)\n\t\t\t\tsetOpen(false)\n\t\t\t\tsetLogin(response.data.token)\n\t\t\t\ttoast.success('🎂 Successful signup!', {\n\t\t\t\t\tposition: \"top-center\",\n\t\t\t\t\tautoClose: 5000,\n\t\t\t\t\thideProgressBar: false,\n\t\t\t\t\tcloseOnClick: true,\n\t\t\t\t\tpauseOnHover: true,\n\t\t\t\t\tdraggable: true,\n\t\t\t\t\tprogress: undefined,\n\t\t\t\t\t});\n\t\t\t}\n\t\t})\n\t}\n\n\tconst handleUsername = (e) => {\n\t\tsetUsername(e.target.value)\n\t}\n\n\tconst handleEmail = (e) => {\n\t\tsetEmail(e.target.value)\n\t}\n\n\tconst handlePassword = (e) => {\n\t\tsetPassword(e.target.value)\n\t}\n\n\tconst handleConfirm = (e) => {\n\t\tsetPasswordConf(e.target.value)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t <Form onSubmit={handleSignUp} className=\"m-3\" >\n                <Form.Group>\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Username\" onChange={handleUsername} value={username} />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Email\" onChange={handleEmail} value={email} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={handlePassword} value={password} />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Confirm Password\" onChange={handleConfirm} value={passwordConf} />\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\"  disabled={!email || !username || !password || !passwordConf || (password !== passwordConf)}>\n                    Sign Up\n                </Button>\n\t\t\t\t<p className=\"forgot-password text-right\">\n                    Already registered? \n\t\t\t\t\t<Button className=\"ml-2\" variant=\"success\" onClick={openLogin}>Sign In</Button>\n                </p>\n            </Form>\n\t\t</>\n\t)\n}\n\n\n{/* <input value={username} type=\"text\" placeholder=\"Username\" onChange={(e) => {setUsername(e.target.value)}} />\n<input value={email} type=\"email\" placeholder=\"Email\" onChange={(e) => {setEmail(e.target.value)}} />\n<input value={password} type=\"password\" placeholder=\"Password\" onChange={(e) => {setPassword(e.target.value)}} />\n<input value={passwordConf} type=\"password\" placeholder=\"Confirm Password\" onChange={(e) => {setPasswordConf(e.target.value)}} />\n<button onClick={handleSignUp} disabled={!email || !username || !password || !passwordConf || (password !== passwordConf)}>Sign Up</button> */}","import React, { useState } from 'react'\nimport axios from 'axios'\nimport { toast } from 'react-toastify';\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {GoogleAPI,GoogleLogin} from 'react-google-oauth'\n\n\n\nexport default ({ setLogin, setOpen, openSignUp}) => {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    \n\n    const handleLogin = (e) => {\n\t\te.preventDefault()\n\n        if(username !== \"\" && password !== \"\") {\n            \n            axios.post(\"https://homefoods1.herokuapp.com/api/v1/login/\", {\n                username,\n                password\n            })\n                .then(response => {\n                    \n                    if(response.data.status == \"success\"){\n\n                        localStorage.setItem(\"token\", response.data.token)\n                        setOpen(false)\n                        setLogin(response.data.token)\n                        toast.info('🥙 Welcome back!', {\n                            position: \"top-center\",\n                            autoClose: 5000,\n                            hideProgressBar: false,\n                            closeOnClick: true,\n                            pauseOnHover: true,\n                            draggable: true,\n                            progress: undefined,\n                        })\n                    } else {\n                        toast.error('🍋 Please Fill correct credentials', {\n                            position: \"top-center\",\n                            autoClose: 5000,\n                            hideProgressBar: false,\n                            closeOnClick: true,\n                            pauseOnHover: true,\n                            draggable: true,\n                            progress: undefined,\n                        });\n                    }\n    \n                })\n                .catch(err => {\n                    console.log(err)\n                })\n\n        } else {\n            toast.error('🥗 Please Fill in credentials', {\n                position: \"top-center\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        }\n\n    }\n\n    const googleLogin = (e) => {\n\t\te.preventDefault()\n        axios.get(\"https://homefoods1.herokuapp.com/api/v1/login/google_login\")\n\t\t.then(resp => {\n\t\t\tlocalStorage.setItem(\"token\", resp.data.auth_token)\n\t\t\tsetOpen(false)\n\t\t\tsetLogin(resp.data.auth_token)\n            toast('🦄 Google signin works!', {\n                position: \"top-center\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                });\n\t\t})\n\t}\n\n    const handleUsername = (e) => {\n        setUsername(e.target.value)\n    }\n\n    const handlePassword = (e) => {\n        setPassword(e.target.value)\n    }\n\n    return (\n        <>\n            <Form onSubmit={handleLogin} className=\"m-3\" >\n                <Form.Group>\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Username\" onChange={handleUsername} value={username} />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={handlePassword} value={password} />\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\"  >\n                    Login\n                </Button>\n                <p className=\"forgot-password text-right\">\n                    No account? \n                <Button className=\"ml-2\" variant=\"success\" onClick={openSignUp}>Sign up</Button>\n                </p>\n            </Form>\n            <p className=\"text-center\" style={{fontSize:'20px'}}>OR</p>\n            <div className=\"text-center\" style={{paddingBottom:'10px'}}>\n            <GoogleAPI  >\n              \t<GoogleLogin disabled/>\n            </GoogleAPI>   \n            </div>\n        </>\n        )\n    }\n\n\n// {/* <input value={username} placeholder=\"Username\" type=\"text\" onChange={handleUsername} />\n// <input value={password} placeholder=\"Password\" type=\"password\" onChange={handlePassword} />\n// <button onClick={handleLogin}>Login</button> */}","import { createContext } from 'react'\n\nexport default createContext()","import React, { useState } from 'react'\nimport SignUp from './Signup'\nimport Login from './Login'\nimport SessionContext from '../contexts/SessionContext'\n\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default ({ children }) => {\n\tconst [isOpen, setOpen] = useState(false)\n\tconst [isLoginForm, setIsLoginForm] = useState(true)\n\tconst [status, setStatus] = useState(\"\")\n\tconst [isLoggedIn, setLogin] = useState(localStorage.getItem(\"token\"))\n\n\tconst open = () => {\n\t\tsetOpen(true)\n\t}\n\n\n\tconst close = () => {\n\t\tsetOpen(false)\n\t}\n\n\tconst openLogin = () => {\n\t\tsetOpen(true)\n\t\tsetIsLoginForm(true)\n\t\tsetStatus(\"Login\")\n\t}\n\n\tconst openSignUp = () => {\n\t\tsetOpen(true)\n\t\tsetIsLoginForm(false)\n\t\tsetStatus(\"Sign Up\")\n\t}\n\n\tconst renderForm = () => {\n\t\tif (isLoginForm) {\n\t\t\treturn <Login setLogin={setLogin} setOpen={setOpen}  openSignUp={openSignUp}/>\n\t\t} else {\n\t\t\treturn <SignUp setLogin={setLogin} setOpen={setOpen} openLogin={openLogin}/>\n\t\t}\n\t}\n\n\tconst renderContent = () => {\n\t\treturn (\n\t\t\t<SessionContext.Provider value={{ openLogin, openSignUp, close, isLoggedIn, setLogin }}>\n\t\t\t\t\n\t\t\t\t\t<Modal show={isOpen} onHide={close}>\n\t\t\t\t\n\t\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t\t<Modal.Title>{status}</Modal.Title>\n\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t{renderForm()}\n\n\t\t\t\t\t\t\t{/* <Modal.Body>\n\t\t\t\t\t\t\t\t<p>Modal body text goes here.</p>\n\t\t\t\t\t\t\t</Modal.Body> */}\n\n\t\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={close}>Close</Button>\n\t\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t\n\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\n\t\t\t\t{children}\n\t\t\t</SessionContext.Provider>\n\t\t)\n\t}\n\n\treturn (\n\t\trenderContent()\n\t)\n\n}\n\n\n","import React, { useContext, useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\"\nimport SessionContext from '../contexts/SessionContext'\nimport SearchContext from '../contexts/SearchContext'\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\nimport Button from 'react-bootstrap/Button'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useParams, Redirect } from \"react-router-dom\"\n\nimport { toast } from 'react-toastify';\n\n\nexport default () => {\n\tconst API_KEY = process.env.REACT_APP_SPOON_API_KEY\n\n\n\tconst { openLogin, openSignUp, isLoggedIn, setLogin } = useContext(SessionContext)\n\n\tconst handleLogout = () => {\n\t\tlocalStorage.removeItem(\"token\")\n\t\tsetLogin(false)\n\t\ttoast.info('🌮 You have successfully logged out!', {\n\t\t\tposition: \"top-center\",\n\t\t\tautoClose: 5000,\n\t\t\thideProgressBar: false,\n\t\t\tcloseOnClick: true,\n\t\t\tpauseOnHover: true,\n\t\t\tdraggable: true,\n\t\t\tprogress: undefined,\n\t\t});\n\t}\n\n\n\nreturn (\n\t<Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" fixed=\"top\">\n\t\t<Navbar.Brand><Link to=\"/\" style={{ color: \"white\", textDecoration: \"none\" }}>HomeFoods</Link></Navbar.Brand>\n\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t{\n\t\t\t\tisLoggedIn ?\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t\t<Nav.Link><Link to=\"/users/me\" style={{ color: \"#9A9DA0\", textDecoration: \"none\" }}>Profile</Link></Nav.Link>\n\t\t\t\t\t\t\t<Nav.Link><Link to=\"/food/\" style={{ color: \"#9A9DA0\", textDecoration: \"none\" }}>Upload Food Image</Link></Nav.Link>\n\t\t\t\t\t\t</Nav>\n\n\t\t\t\t\t\t<Button className=\"mx-2 my-2\" variant=\"primary\">\n\t\t\t\t\t\t\t<Link to='/recipes/' style={{ color: \"white\", textDecoration: \"none\" }}>Search</Link></Button>\n\n\t\t\t\t\t</>\n\t\t\t\t\t: null\n\n\t\t\t}\n\t\t\t{\n\n\t\t\t\tisLoggedIn ? <Button className=\"mx-2 my-2\" variant=\"danger\" onClick={handleLogout}>Logout</Button>\n\t\t\t\t\t:\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={openLogin} className=\"mx-2\">Login</Button>\n\t\t\t\t\t\t<Button variant=\"success\" onClick={openSignUp} className=\"mx-2\">Sign Up</Button>\n\t\t\t\t\t</>\n\t\t\t}\n\t\t</Navbar.Collapse>\n\t</Navbar>\n\n\n)\n}\n\n\t// {/* <h2>Navbar</h2>\n\t\t// <Link to=\"/\" >Home</Link>\n\t\t// {\n\t\t// \tisLoggedIn ?\n\t\t// \t\t<>\n\t\t// \t\t\t<Link to=\"/users/me\" >Profile</Link>\n\t\t// \t\t\t<Link to=\"/recipes/\" >Search for Recipes</Link>\n\t\t// \t\t\t<Link to=\"/food/\" >Upload Food Image</Link>\n\t\t// \t\t</>\n\t\t// \t\t: null\n\t\t// }\n\t\t// {\n\t\t// \tisLoggedIn ? <button onClick={handleLogout}>Logout</button> :\n\t\t// \t\t<>\n\t\t// \t\t\t<button onClick={openSignUp}>Sign Up</button>\n\t\t// \t\t\t<button onClick={openLogin}>Login</button>\n\t\t// \t\t</>\n\t\t// } */}","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport CardDeck from 'react-bootstrap/CardDeck'\n\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default ({ random }) => {\n\n    return (\n        <>\n            <Row className=\"justify-content-center mt-4\" >\n                {\n                    random.map(randomRecipe => (\n                        <Col key={randomRecipe.id} lg=\"true\" xs=\"true\" className=\"mr-3 ml-3 mt-4\">\n                            <CardDeck >\n                                <Card bg=\"dark\" text=\"light\" style={{ width: '18rem' }}>\n                                    <Card.Img variant=\"top\" src={randomRecipe.image} className=\"w-100\" />\n                                    <Card.Body>\n                                            <Card.Title>\n                                            { randomRecipe.title.length < 15 ? `${randomRecipe.title}` \n                                            : `${randomRecipe.title.substring(0, 20)}...`\n                                            }\n                                            </Card.Title>\n                                        <Card.Text>\n                                            { randomRecipe.diets[0] == null ? `no dietary info`\n                                            : randomRecipe.diets[0]\n                                            }\n                                        </Card.Text>\n                                        <Button variant=\"primary\">\n                                            <Link to={{\n                                                pathname: `/recipe/${randomRecipe.id}`,\n                                                recipe: {\n                                                    id: randomRecipe.id,\n                                                    title: randomRecipe.title,\n                                                    image: randomRecipe.image\n                                                }\n                                            }} style={{ color: \"white\" }}>Get Recipe</Link>\n                                        </Button>\n                                    </Card.Body>\n                                </Card>\n                            </CardDeck>\n                        </Col>\n                    ))\n                }\n            </Row>\n        </>\n    )\n}\n\n","import React, { useState, useEffect, useContext } from 'react';\nimport RandRecipeCard from '../components/RandRecipeCard'\nimport axios from 'axios';\n\nimport SearchContext from '../contexts/SearchContext'\n\nexport default ({showRand, setShowRand}) => {\n    const API_KEY = process.env.REACT_APP_SPOON_API_KEY\n    const [random, setRandom] = useState([])\n\n\n    useEffect(() => {\n        axios.get(`https://api.spoonacular.com/recipes/random?apiKey=${API_KEY}&number=10`)\n        .then(response => {\n            // console.log(response.data.recipes)\n            setRandom(response.data.recipes)\n        })\n    }, [showRand, setShowRand])\n\n    return (\n        <>\n            <RandRecipeCard random={random} />\n        </>\n    )\n}","import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams, Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport SessionContext from '../contexts/SessionContext'\n\nimport Image from 'react-bootstrap/Image'\nimport Button from 'react-bootstrap/Button'\n\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default () => {\n    const { isLoggedIn } = useContext(SessionContext)\n    const { id } = useParams()\n    const [user, setUser] = useState({})\n    const [profileImg, setProfileImg] = useState(null)\n    // new code below\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [old_password, setOldPassword] = useState('')\n    const [password, setPassword] = useState('')\n\n    // to get user's profile image\n    useEffect(() => {\n        axios.get(\"https://homefoods1.herokuapp.com/api/v1/users/me\", {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n            }\n        })\n            .then(response => {\n                // console.log(response)\n                setUser({\n                    ...response.data,\n                    profileImage: response.data.image_path\n                })\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }, [id, user.image_path])\n\n    if (!isLoggedIn || (id === \"me\" && !localStorage.getItem(\"token\"))) {\n        return <Redirect to=\"/\" />\n    }\n    // just keep the comment, so we cna refer later lol\n    // this part is to update profile image picture\n    const uploadImages = (e) => {\n        e.preventDefault();\n        const fileInput = e.target\n        const formData = new FormData()\n        formData.append(\"image\", profileImg)\n        axios.post(\"https://homefoods1.herokuapp.com/api/v1/images/\", formData, {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n            }\n        })\n            .then((uploadImg) => {\n                fileInput.value = null\n                const userCopy = { ...user }\n                setUser({})\n                setUser(userCopy)\n                // console.log(uploadImg)\n            })\n    }\n\n\n    // this part to update profile details (this part is not working properly)\n    // its tell me the token is incorrect\n    const updateInfo = (e) => {\n        e.preventDefault();\n\n        axios.post(`https://homefoods1.herokuapp.com/api/v1/users/${id}`, {\n            username,\n            email,\n            old_password,\n            password\n        },\n            {\n                headers: {\n                    Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n                },\n\n            })\n            .then(response => {\n                // console.log(response)\n                localStorage.setItem(\"token\", response.data.token)\n                const userCopy = { ...user }\n                setUser({})\n                setUser(userCopy)\n            })\n    }\n\n    const handleFileChange = (e) => {\n        setProfileImg(e.target.files[0])\n    }\n\n    const handleUsername = e => {\n        setUsername(e.target.value)\n    }\n\n    const handleEmail = e => {\n        setEmail(e.target.value)\n    }\n\n    const handleOldPassword = e => {\n        setOldPassword(e.target.value)\n    }\n\n    const handlePassword = e => {\n        setPassword(e.target.value)\n    }\n// test\n    return (\n        <div>\n            {\n                user.id ?\n                    <>\n                        <Container className=\"mt-4\">\n                            <Container className=\"mt-4 d-flex\">\n                                <Image src={user.profileImage} width=\"300\" fluid className=\"rounded d-print-block float-left mt-3 mb-3 mr-3\" />\n                                <h3 className=\"mt-auto\">\n                                    Username: {user.username}\n                                </h3>\n\n\n                            </Container>\n                            <Form className=\"mb-4\" onSubmit={uploadImages}>\n                                <Form.Group>\n                                    <Form.File type=\"file\" onChange={handleFileChange} label=\"Update User Image Profile\" />\n                                </Form.Group>\n                                <Button variant=\"primary\" type=\"submit\">Upload Image</Button>\n                            </Form>\n\n                            \n                                <h4>Update User Details:</h4>\n\n                                <Form onSubmit={updateInfo}>\n                                    <Form.Row>\n                                        <Col>\n                                            <Form.Control value={username} placeholder={user.username} type=\"text\" onChange={handleUsername} />\n                                        </Col>\n                                        <Col>\n                                            <Form.Control value={email} placeholder={user.email} type=\"email\" onChange={handleEmail} />\n                                        </Col>\n                                        <Col>\n                                            <Form.Control value={old_password} placeholder=\"Old password\" type=\"password\" onChange={handleOldPassword} />\n                                        </Col>\n                                        <Col>\n                                            <Form.Control value={password} placeholder=\"New password\" type=\"password\" onChange={handlePassword} />\n                                        </Col>\n                                    </Form.Row>\n                                    <Button variant=\"primary\" className=\"mt-4\" type=\"submit\">Update</Button>\n                                </Form>\n                               \n                        </Container>\n                    </> :\n                    null\n            }\n        </div>\n    )\n\n}\n\n\n{/* <div>\n<form onSubmit={uploadImages}>\n<input type=\"file\" onChange={handleFileChange} />\n<button type=\"submit\">Upload</button>\n</form>\n</div> */}\n\n\n{/* <form onSubmit={updateInfo}>\n<input value={username} placeholder={user.username} type=\"text\" onChange={handleUsername} />\n<input value={email} placeholder={user.email} type=\"email\" onChange={handleEmail} />\n<input value={old_password} placeholder=\"Old password\" type=\"password\" onChange={handleOldPassword} />\n<input value={password} placeholder=\"New password\" type=\"password\" onChange={handlePassword} />\n<button type=\"submit\">Update</button>\n</form> */}\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { useParams } from \"react-router-dom\";\n\nimport Image from 'react-bootstrap/Image'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\n\nimport Container from 'react-bootstrap/Container'\nimport Card from 'react-bootstrap/Card'\nimport CardGroup from 'react-bootstrap/CardGroup'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport ScrollToTop from 'react-scroll-up';\n\n\nexport default (recipe) => {\n    const API_KEY = process.env.REACT_APP_SPOON_API_KEY\n    const [isSteps, setSteps] = useState([])\n    const [imageURL, setImageURL] = useState(\"\")\n    const [title, setTitle] = useState(\"\")\n    const [sourceURL, setSourceURL] = useState(\"\")\n    const [author, setAuthor] = useState(\"\")\n    const [cookTime, setCookTime] = useState(\"\")\n\n\n\n    let { id } = useParams()\n\n    useEffect(() => {\n\n        axios.get(`https://api.spoonacular.com/recipes/${id}/information?apiKey=${API_KEY}`)\n            .then(resp => {\n                // console.log(resp.data)\n                setImageURL(resp.data.image)\n                setTitle(resp.data.title)\n                setSourceURL(resp.data.sourceUrl)\n                setAuthor(resp.data.sourceName)\n                setCookTime(resp.data.cookingMinutes)\n            })\n\n        // https://spoonacular.com/food-api/docs#Get-Analyzed-Recipe-Instructions\n        axios.get(`https://api.spoonacular.com/recipes/${id}/analyzedInstructions?apiKey=${API_KEY}`)\n            .then(response => {\n                // console.log(response.data[0])\n\n                setSteps(response.data[0].steps)\n            })\n        // .catch(error => {\n        //     console.log(error)\n        // })\n        // .then((data) => {\n        //     console.log(data)\n\n        //  \n        // })\n\n    }, [id])\n    return (\n        <>\n            <Container className=\"mt-4\">\n                <Jumbotron className=\"bg-dark mt-4 text-light\">\n                    <h1>{title}</h1>\n                    <Image src={imageURL} fluid className=\" rounded d-block mx-auto mt-3 mb-3\" />\n                    <h3>\n                        Recipe Author: {author}\n                    </h3>\n                    <p className=\"font-weight-normal\">Duration to make: {cookTime} minutes</p>\n                    <p className=\"mt-4\">\n                        <Button variant=\"primary\" href={sourceURL} target=\"_blank\">Learn more</Button>\n                    </p>\n                </Jumbotron>\n                <Container className=\"d-flex flex-column\">\n                    {\n                        isSteps.map(steps => (\n                            <CardGroup className=\"mb-3\">\n                                <Card bg=\"dark\" text=\"light\" key={steps.number} border=\"info\" style={{ width: '18rem' }}>\n                                    <Card.Header>Step: {steps.number}</Card.Header>\n                                    <h6 className=\"m-2\">Items:</h6>\n                                    <Container className=\"d-flex flex-xl-row flex-lg-row flex-md-row flex-column\">\n                                        {\n                                            steps.ingredients.map(ingredients => (\n                                                <Card.Body className=\"p-1\" key={ingredients.id}>\n                                                    <ul>\n                                                        <li>{ingredients.name}</li>\n                                                    </ul>\n                                                </Card.Body>\n                                            ))\n                                        }\n                                    </Container>\n                                    <Card.Footer>\n                                        <Card.Text className=\"p-3\">\n                                            {steps.step}\n                                        </Card.Text>\n                                    </Card.Footer>\n                                </Card>\n                            </CardGroup>\n\n                        ))\n                    }\n                </Container >\n                <ScrollToTop showUnder={160}>\n                    <Button variant=\"danger\">\n                        UP</Button>\n                </ScrollToTop>\n            </Container >\n        </>\n    )\n}\n\n\n\n\n\n\n\n\n\n// {/* <div key={steps.number}>\n// <Button variant=\"warning\" >Step: {steps.number}</Button>\n// <h6>Items:</h6>\n// {\n// steps.ingredients.map(ingredients => (\n//     <ul key={ingredients.id}>\n//         <li>{`${ingredients.name} `}</li>\n//     </ul>\n// ))\n// }\n// <p>{steps.step}</p>\n// </div> */}","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport CardDeck from 'react-bootstrap/CardDeck'\n\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default ({ isRecipes }) => {\n\n    return (\n        <>\n            <Row className=\"justify-content-center mt-4\" >\n                {\n                    isRecipes.map(recipe => (\n                        <Col key={recipe.id} lg=\"true\" xs=\"true\" className=\"mr-3 ml-3 mt-4 mb-4\">\n                            <CardDeck >\n                                <Card bg=\"dark\" text=\"light\" style={{ width: '18rem' }}>\n                                    <Card.Img variant=\"top\" src={recipe.image} className=\"w-100\" />\n                                    <Card.Body>\n                                            <Card.Title>\n                                            { recipe.title.length < 15 ? `${recipe.title}` \n                                            : `${recipe.title.substring(0, 20)}...`\n                                            }\n                                            </Card.Title>\n                                        <Card.Text>\n                                            Likes: {recipe.likes}\n                                        </Card.Text>\n                                        <Button variant=\"primary\">\n                                            <Link to={{\n                                                pathname: `/recipe/${recipe.id}`,\n                                                recipe: {\n                                                    id: recipe.id,\n                                                    title: recipe.title,\n                                                    image: recipe.image\n                                                }\n                                            }} style={{ color: \"white\" }}>Get Recipe</Link>\n                                        </Button>\n                                    </Card.Body>\n                                </Card>\n                            </CardDeck>\n                        </Col>\n                    ))\n                }\n            </Row>\n        </>\n    )\n}\n\n","import React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport SessionContext from '../contexts/SessionContext'\nimport { toast } from 'react-toastify';\n\nimport RecipeCard from '../components/RecipeCard';\n\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Container from 'react-bootstrap/Container'\nimport Nav from 'react-bootstrap/Nav'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\n\nimport SearchContext from '../contexts/SearchContext';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport ScrollToTop from 'react-scroll-up';\n\n\nexport default () => {\n    const API_KEY = process.env.REACT_APP_SPOON_API_KEY\n    const { isLoggedIn } = useContext(SessionContext)\n\n    // const {searchResult} = useContext(SearchContext)\n\n\n    const [searchResult, setSearchResult] = useState(\"\")\n\n    const [isRecipes, setRecipes] = useState([])\n\n    const [count, setCount] = useState(10)\n    const [showCount, setShowCount] = useState(false)\n\n\n    const getRecipes = (e) => {\n        e.preventDefault()\n        if (searchResult !== \"\") {\n            axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${searchResult}&number=${count}`)\n                .then(response => {\n                    // console.log(response)\n                    // console.log(response.data)\n                    setRecipes(response.data)\n                    setShowCount(true)\n                })\n        } else {\n            toast.warn('Please fill in ingredient', {\n                position: \"top-left\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        }\n    }\n\n    // useEffect(() => {\n    // //    moreSearch()\n    // }, [])\n\n\n    if (!isLoggedIn || !localStorage.getItem(\"token\")) {\n        return <Redirect to=\"/\" />\n    }\n\n    const moreSearch = () => {\n        setCount(count + 10)\n        axios.get(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=${API_KEY}&ingredients=${searchResult}&number=${count}`)\n            .then(response => {\n                // console.log(response)\n                // console.log(response.data)\n                setRecipes(response.data)\n            })\n    }\n\n    const handleSearch = (e) => {\n        setSearchResult(e.target.value)\n    }\n\n\n\n\n    return (\n        <>\n            <Container className=\"mt-4\">\n                <Form onSubmit={getRecipes}>\n                    <InputGroup className=\"mb-3\">\n                        <FormControl\n                            className=\"text-center\"\n                            onChange={handleSearch}\n                            placeholder=\"Input Ingredient\"\n                            aria-label=\"Input Ingredient\"\n                            aria-describedby=\"basic-addon2\"\n                        />\n                        <InputGroup.Append>\n                            <Button\n                                variant=\"success\"\n                                type=\"submit\"\n                            >\n                                Look up recipe\n                    </Button>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Form>\n            </Container>\n\n            <ScrollToTop showUnder={160}>\n                <Button variant=\"danger\">UP</Button>\n            </ScrollToTop>\n            <RecipeCard isRecipes={isRecipes} />\n\n            <Container className=\"mt-4\">\n                {\n                    showCount ?\n                        <Nav className=\"justify-content-center mb-4\">\n                            <Button variant=\"warning\" onClick={moreSearch}>More</Button>\n                        </Nav>\n                        : null\n                }\n            </Container>\n        </>\n    )\n}\n\n\n\n// <input onChange={handleSearch} type=\"text\" />\n\n// <br />\n// <Button variant=\"success\" onClick={getRecipes}>Get Search</Button>\n\n\n// {\n//     isRecipes.map(recipe => (\n//         <div key={recipe.id}>\n//             <img src={recipe.image} width=\"250\" />\n//             <p>{recipe.title}</p>\n//             <button>\n//                 <Link to={{\n//                     pathname: `/recipe/${recipe.id}`,\n//                     recipe: {\n//                         id: recipe.id,\n//                         title: recipe.title,\n//                         image: recipe.image\n//                     }\n//                 }}>Get Recipe</Link>\n//             </button>\n//         </div>\n//     ))\n// }","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport CardDeck from 'react-bootstrap/CardDeck'\n\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default ({ foodRelation }) => {\n\n    return (\n        <>\n            <Row className=\"justify-content-center mt-4\" >\n                {\n                    foodRelation.map(recipe => (\n                        <Col key={recipe.id} lg=\"true\" xs=\"true\" className=\"mr-3 ml-3 mt-4\">\n                            <CardDeck >\n                                <Card bg=\"dark\" text=\"light\" style={{ width: '18rem' }}>\n                                    <Card.Img variant=\"top\" src={`https://spoonacular.com/recipeImages/${recipe.id}-240x150.${recipe.imageType}`} className=\"w-100\" />\n                                    <Card.Body>\n                                            <Card.Title>\n                                            { recipe.title.length < 15 ? `${recipe.title}` \n                                            : `${recipe.title.substring(0, 20)}...`\n                                            }\n                                            </Card.Title>\n                                        <Button variant=\"primary\" href={recipe.url} target=\"_blank\">\n                                            Get Recipe Info\n                                        </Button>\n                                    </Card.Body>\n                                </Card>\n                            </CardDeck>\n                        </Col>\n                    ))\n                }\n            </Row>\n        </>\n    )\n}\n\n","import React, { useState, useContext } from 'react'\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport SessionContext from '../contexts/SessionContext'\nimport axios from 'axios';\n\nimport RelationCard from '../components/RelationCard';\n\nimport Image from 'react-bootstrap/Image'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\n\nimport Container from 'react-bootstrap/Container'\n\nimport Form from 'react-bootstrap/Form'\n\n\nexport default () => {\n    const API_KEY = process.env.REACT_APP_SPOON_API_KEY\n    const { isLoggedIn } = useContext(SessionContext)\n    const [foodImg, setFoodImg] = useState(null)\n    const [previewFood, setPreviewFood] = useState(null)\n    const [foodRelation, setFoodRelation] = useState([])\n    const [showText, setShowText] = useState(false)\n\n    if (!isLoggedIn || !localStorage.getItem(\"token\")) {\n        return <Redirect to=\"/\" />\n    }\n\n    const foodImage = (e) => {\n        e.preventDefault()\n        let foodInput = e.target\n        const formFood = new FormData()\n        formFood.append(\"file\", foodImg)\n        axios.post(`https://api.spoonacular.com/food/images/analyze?apiKey=${API_KEY}`, formFood)\n            .then(response => {\n                foodInput.value = null\n                // console.log(response.data.recipes)\n                // console.log(response.data)\n                setFoodRelation(response.data.recipes)\n                setShowText(true)\n            })\n    }\n\n\n\n    const handleFoodImg = (e) => {\n        setPreviewFood(URL.createObjectURL(e.target.files[0]))\n        setFoodImg(e.target.files[0])\n    }\n\n    return (\n\n        <Container className=\"mt-4\">\n            <Jumbotron className=\"bg-dark mt-4 text-light\">\n\n                <Image src={previewFood} fluid className=\" rounded d-block mx-auto mt-3 mb-3\" />\n                <Form onSubmit={foodImage}>\n                    <Form.Group>\n                        <Form.File type=\"file\" onChange={handleFoodImg} label=\"Analyze Food Image\" />\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">Upload Image</Button>\n                </Form>\n            </Jumbotron>\n            {/* <form >\n                        <input type=\"file\" onChange={handleFoodImg} />\n                        <button type=\"submit\">Upload</button>\n                    </form> */}\n\n            {\n                showText ?\n                    <h2>Related Food Recipes:</h2>\n                    : null\n            }\n            {\n\n                <RelationCard foodRelation={foodRelation} />\n                // foodRelation.map(recipe => (\n                //     <div key={recipe.id}>\n                //         <h3>{recipe.title}</h3>\n                //         <img src={`https://spoonacular.com/recipeImages/${recipe.id}-240x150.${recipe.imageType}`} width=\"250\" />\n                //         <br />\n                //         <a href={recipe.url} target=\"_blank\">Click for more info</a>\n                //     </div>\n                // ))\n            }\n        </Container>\n    )\n}\n\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Modal from './containers/Modal.js';\nimport NavBar from './components/NavBar.js';\nimport HomePage from './pages/HomePage.js';\nimport UserProfile from './pages/UserProfile.js';\nimport Recipe from './pages/Recipe';\nimport RecipePage from './pages/RecipePage';\nimport FoodAnalyze from './pages/FoodAnalyze';\n\nimport Container from 'react-bootstrap/Container'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport \"./App.css\"\n\n\n\nfunction App() {\n  return (\n    <Container fluid >\n      <Modal>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/users/:id\" component={UserProfile} />\n          <Route path=\"/recipes/\" component={RecipePage} />\n          <Route path=\"/recipe/:id\" component={Recipe} />\n          <Route path=\"/food/\" component={FoodAnalyze} />\n        </Switch>\n        <ToastContainer />\n      </Modal>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}